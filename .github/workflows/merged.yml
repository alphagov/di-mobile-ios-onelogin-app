name: iOS Deploy

on:
  push:
    branches: [ develop, release/*, main ]

permissions:
  id-token: write
  contents: read

jobs:
  run_swiftlint:
    name: Run Swiftlint
    runs-on: macos-15
    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Lint
        run: |
          brew install swiftlint
          swiftlint --strict

  quality_report:
    needs: run_swiftlint
    name: Run Unit Tests and Send Coverage Report
    runs-on: macos-15

    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./scripts-configs/store-access-token.sh
          
      - name: Export AppCheck Secret
        run: |
          touch ../secrets.xcconfig

      - name: Build App, Run Unit Tests and Send Coverage Report for Default Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/scripts-configs/override-git-config'
        run: |
          brew install sonar-scanner

          bundle install

          bundle exec fastlane test scheme:"OneLoginBuild" \
            configuration:"Debug" \
            testplan:OneLoginUnit \
            workspace:${{github.workspace}} \
            sonar_token:${{secrets.SONAR_TOKEN}}

  test_staging_config:
    needs: run_swiftlint
    name: Run Staging Configuration Tests
    runs-on: macos-15
    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./scripts-configs/store-access-token.sh

      - name: Build App, Run Staging Configuration Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/scripts-configs/override-git-config'
        run: |
          bundle install

          bundle exec fastlane testWithoutCoverage scheme:"OneLoginStaging" \
            configuration:"Staging" \
            testplan:OneLoginStaging

  test_build_config:
    needs: run_swiftlint
    name: Run Build Configuration Tests
    runs-on: macos-15
    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./scripts-configs/store-access-token.sh
          
      - name: Export AppCheck Secret
        run: |
          touch ../secrets.xcconfig

      - name: Build App, Run Build Configuration Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/scripts-configs/override-git-config'
        run: |
          bundle install

          bundle exec fastlane testWithoutCoverage scheme:"OneLoginBuild" \
            configuration:"Build" \
            testplan:OneLoginBuild

  test_ui:
    needs: run_swiftlint
    name: Run UI Tests
    runs-on: macos-15
    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./scripts-configs/store-access-token.sh
          
      - name: Export AppCheck Secret
        env:
            APP_CHECK_DEBUG_TOKEN: ${{ secrets.BUILD_APPCHECK_DEBUG_TOKEN }}
        run: |
          echo APP_CHECK_DEBUG_TOKEN=$APP_CHECK_DEBUG_TOKEN >> ../secrets.xcconfig

      - name: Build App, Run UI Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/scripts-configs/override-git-config'
        run: |
          bundle install

          bundle exec fastlane testWithoutCoverageForUITests scheme:"OneLoginBuild" \
            testplan:OneLoginUI

      - name: Make Artifact
        if: failure()
        run: |
          cd ./fastlane
          zip -rq UITestArtifact test_output -x "test_output/report.junit"

      - name: Upload Artifact
        if: failure()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # pin@v4
        with:
          name: UITestArtifact
          path: ./fastlane/UITestArtifact.zip
          retention-days: 1

  deploy_staging_app:
    needs: [ test_staging_config, test_ui ]
    name: Deploy App
    uses: ./.github/workflows/deploy.yml
    with:
      configuration: "Staging"
    secrets: inherit

  deploy_build_app:
    needs: [ test_build_config, test_ui ]
    name: Deploy App
    uses: ./.github/workflows/deploy.yml
    with:
      configuration: "Build"
      app_check: true
    secrets: inherit
