name: iOS Pull Request

on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ develop, release/*, main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Run Unit Tests and Send Coverage Report
    runs-on: macos-14

    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./store-access-token.sh

      - name: Lint
        run: |
          brew install swiftlint
          swiftlint --strict

      - name: Build App, Run Unit Tests and Send Coverage Report for Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/override-git-config'
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          brew install sonar-scanner

          bundle install

          bundle exec fastlane test scheme:"OneLogin" \
            sonar_token:${{secrets.SONAR_TOKEN}} \
            workspace:${{github.workspace}} \
            source_branch:${{github.head_ref}} \
            target_branch:${{github.base_ref}} \
            pr_number:$pull_number \
            testplan:OneLoginUnit

  

      # Check the Quality Gate status.
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496 # pin@v1.1.0
      #   # Force to fail step after specific time.
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pact:
    name: Run Pact Tests and Upload to Broker
    runs-on: macos-14

    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure Private Repo Access
        env:
          GIT_TOKEN: ${{secrets.MODULE_FETCH_TOKEN}}
        run: |
          ./store-access-token.sh

      - name: Lint
        run: |
          brew install swiftlint
          swiftlint --strict

      - name: Install and start PACT broker
        run: |
          brew tap pact-foundation/pact-ruby-standalone
          brew install pact-ruby-standalone
          pact-mock-service start --pact-specification-version 2.0.0 --log "${{github.workspace}}/pact/pact.log" --pact-dir "${{github.workspace}}/pact/pacts" -p 1234

      - name: Build App, Run PACT tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/override-git-config'
        run: |
          bundle install

          bundle exec fastlane testWithoutCoverage scheme:"OneLoginBuild" \
            testplan:OneLoginPactTestPlan
      
      - name: Stop PACT mock service
        run: |
          pact-mock-service stop    
      
      - name: Upload to PACT broker.
        env:
          PACT_BROKER_USERNAME_NP: ${{ secrets.PACT_BROKER_USERNAME_NP }}
          PACT_BROKER_PASSWORD_NP: ${{ secrets.PACT_BROKER_PASSWORD_NP }}
          PACT_BROKER_SOURCE_SECRET_NP: ${{ secrets.PACT_BROKER_SOURCE_SECRET_NP }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
          GIT_CONFIG_NOSYSTEM: "true"
          GIT_CONFIG_GLOBAL: '${{ github.workspace }}/override-git-config'
        if: ${{ success() }}
        # The pact broker endpoint requires a query parameter to be accessed from outside the VPN.  However, the broker CLI will ignore this when passed as part of the "-b" parameter
        # By first executing a curl command to the broker endpoint, it allows subsequent connections and results can be published
        # The 4 second delay between the curl and pact-broker commands has been found to help mitigate 403 errors being returned from the pact-broker

        run: |
          response_code=$(curl -o /dev/null -w "%{http_code}\n" -u ${{env.PACT_BROKER_USERNAME_NP}}:${{env.PACT_BROKER_PASSWORD_NP}} "https://pactbroker-onelogin.staging.account.gov.uk/?testSource=${{env.PACT_BROKER_SOURCE_SECRET_NP}}")
          if [ $response_code -eq 200 ]; then
            sleep 4
            pact-broker publish ${{github.workspace}}/pact/pacts --consumer-app-version ${{github.sha}} --branch ${{github.head_ref}} -u=${{env.PACT_BROKER_USERNAME_NP}} -p=${{env.PACT_BROKER_PASSWORD_NP}} -b="https://pactbroker-onelogin.staging.account.gov.uk"
          else 
            echo $response_code
            echo "Login to pact broker failed, results not uploaded"
          fi