name: iOS Pull Request

on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ develop, release/*, main ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Run Unit Tests and Send Coverage Report
    runs-on: macos-13

    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.GITHUBRUNNER_EC2_ACTIONS_ROLE_ARN }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Store Secrets from AWS SecretManager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2.0.1
        with:
          secret-ids: |
            di-ipv-dca-mob-ios/github-actions-v2
          parse-json-secrets: true
          
      - name: Show environment variables
        run: env

      - name: Build App, Run Unit Tests and Send Coverage Report for Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
        run: |
          gitbranch=$(echo ${GITHUB_REF:-dev} | sed s/refs\\/heads\\///g)
          echo Pushed to branch: $gitbranch
          
          CERTIFICATE_PATH=$RUNNER_TEMP/distribution.p12
          CERTIFICATE_PASSWORD="${{env.DI_IPV_DCA_MOB_IOS_GITHUB_ACTIONS_V2_AWS_SECRET_SIGNING_KEY_PASSWORD}}"
          APIKEY_PATH=$RUNNER_TEMP/apikey.p8
          
          bundle install
          
          # import certificates from secrets
          echo -n ${{env.DI_IPV_DCA_MOB_IOS_GITHUB_ACTIONS_V2_AWS_SECRET_DISTRIBUTION_P12_ENCODED}} \
            | base64 --decode -o $CERTIFICATE_PATH
            
          echo -n ${{env.DI_IPV_DCA_MOB_IOS_GITHUB_ACTIONS_V2_AWS_SECRET_AUTH_KEY_P8_ENCODED}} \
            | base64 --decode -o $APIKEY_PATH

          bundle exec fastlane testImportCertificates \
            certificate_path:$CERTIFICATE_PATH \
            certificate_password:$CERTIFICATE_PASSWORD \
            apikey_path:$APIKEY_PATH --verbose
