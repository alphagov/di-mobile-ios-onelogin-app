name: iOS Pull Request

on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ develop, release/*, main ]

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Run Unit Tests and Send Coverage Report
    runs-on: macos-13

    steps:
      - name: Add Path Globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          fetch-depth: 0

      - name: Lint
        run: swiftlint --strict

      - name: Build App, Run Unit Tests and Send Coverage Report for Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: "en_US.UTF-8"
          LANG: "en_US.UTF-8"
        run: |
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          rm '/usr/local/bin/2to3'
          rm '/usr/local/bin/2to3-3.12'
          rm '/usr/local/bin/idle3'
          rm '/usr/local/bin/idle3.12'
          rm '/usr/local/bin/pydoc3'
          rm '/usr/local/bin/pydoc3.12' 
          rm '/usr/local/bin/python3' 
          rm '/usr/local/bin/python3-config' 
          rm '/usr/local/bin/python3.12' 
          rm '/usr/local/bin/python3.12-config'
          rm '/usr/local/share/man/man1/python3.1' 
          rm '/usr/local/lib/pkgconfig/python3-embed.pc'
          rm '/usr/local/lib/pkgconfig/python3.pc'
          rm '/usr/local/Frameworks/Python.framework/Headers' 
          rm '/usr/local/Frameworks/Python.framework/Python' 
          rm '/usr/local/Frameworks/Python.framework/Resources' 
          rm '/usr/local/Frameworks/Python.framework/Versions/Current'
          rm '/usr/local/bin/2to3-3.11'
          rm '/usr/local/bin/idle3.11'
          rm '/usr/local/bin/pydoc3.11'
          rm '/usr/local/bin/python3.11'
          rm '/usr/local/bin/python3.11-config'
          brew install sonar-scanner

          bundle install

          bundle exec fastlane test scheme:"OneLogin" \
            sonar_token:${{secrets.SONAR_TOKEN}} \
            workspace:${{github.workspace}} \
            source_branch:${{github.head_ref}} \
            target_branch:${{github.base_ref}} \
            pr_number:$pull_number \
            testplan:OneLoginUnit

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
